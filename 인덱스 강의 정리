인덱스(=벨런스 트리)는 원래 처음에는 디스크에 존재하였지만, 인덱스를 사용하는 쿼리를 하면 메모리로 옮겨오기 때문이다
디스크 접근보다 메모리에 접근하는 것이 훨씬 더 빠르기에 인덱스를 사용하는 것이다
인덱스는 평평한 리스트가 아니며, "정렬된 tree"이기에, 리스트보다 훨씬 빠르게 원하는 값을 찾을 수 있다.

복합 인덱스: 2개 이상의 값을 가지고 있는 인덱스이지만, 복합 인덱스에는 순서가 있고 순서에 따라 검색 성능이 달라진다

<Scan 의 종류>
Index Range Scan : 인덱스의 "일부"만 읽어서 쿼리를 처리 완료
Index Full Scan : 인덱스를 전부 읽어서 쿼리를 처리
Table Full Scan : 테이블 전체를 읽어서 쿼리를 처리 (테이블 크기가 클 경우 전면장애까지 이어질 가능성 있는 위험이 있음)

Indx 의 Covr
indx만 사용해서 처리할 수 있는 쿼리를 covered query 이다. covered query 는 디스크 조회 연산이 일어나지 않아서 성능이 굉장하다

Edgedb 에서 indx 사용되는지 확인
SeqScan: (mysql 의 table scan 과 같음. index를 못 쓰는 쿼리)
IndexScan: index를 쓰는 쿼리
